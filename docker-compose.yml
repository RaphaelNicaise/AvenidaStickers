networks:
  app_network:

services:
  mongo:
    image: mongo:8
    container_name: mongo
    ports:
      - "27017:27017"   # opcional para host
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  back:
    build: ./backend
    container_name: back
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app:cached      # sincroniza código host ↔ contenedor
      - /app/node_modules    # evita sobrescribir node_modules del contenedor
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGO_URI: ${MONGODB_URI}
      TEST_MP_ACCESS_TOKEN: ${TEST_MP_ACCESS_TOKEN}
      TEST_MP_PUBLIC_KEY: ${TEST_MP_PUBLIC_KEY}
      PORT: ${PORT}
      ADMIN_KEY: ${ADMIN_KEY}
    depends_on:
      - mongo
    networks:
      - app_network

  front:
    build: ./frontend
    container_name: front
    ports:
      - "5173:5173" # puerto por defecto de Vite
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL}   # Variable del .env raíz
    depends_on:
      - back
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend/public/uploads:/var/www/uploads:ro  # Imágenes uploads
      - ./ssl:/etc/nginx/ssl:ro  # Certificados SSL (cuando los tengas)
    depends_on:
      - front
      - back
    networks:
      - app_network
      
volumes:
  mongo_data: